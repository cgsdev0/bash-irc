#!/usr/bin/env bash

set noglob

ORM_DB=db.sqlite
VERSION=0.0.1
IRC_SERVER_HOST=localhost
PORT=${PORT:-6667}

declare -A SUBS
# self explanatory
function query() {
  function _query() {
    local QUERY
    QUERY="$1"
    shift
    printf ".parameter init\n"
    INDEX=1
    for arg in "$@"; do
      : "${arg//\\/\\\\\\\\}"
      : "${_//$'\t'/    }"
      : "${_//\"/\\\"}"
      : "${_//\'/\\\'}"
      : "${_//$'\n'/\\\\n}"
      if [[ "$_" =~ "'" ]]; then
        printf ".parameter set ?%d \"%s\"\n" $INDEX "$_"
      else
        printf ".parameter set ?%d \"'%s'\"\n" $INDEX "$_"
      fi
      ((INDEX++))
    done
    printf "%s\n" "$QUERY";
  }
  sqlite3 -separator $'\t' "$ORM_DB" < <(_query "$@")
}

split() {
   # Usage: split "string" "delimiter"
   IFS=$'\n' read -d "" -ra arr <<< "${1//$2/$'\n'}"
}

function subscribe() {
  local TOPIC
  TOPIC="$1"
  if [[ -z "$TOPIC" ]]; then
    debug "ATTEMPTED TO SUBSCRIBE ON EMPTY TOPIC"
    return
  fi
  mkdir -p pubsub/"${TOPIC}"
  local tmppipe=pubsub/"${TOPIC}/${NICK}"
  mkfifo -m 600 "$tmppipe"
  SUBSCRIPTION="$tmppipe"
}

function unsubscribe() {
  local TOPIC
  TOPIC="$1"
  if [[ "$TOPIC" != "pubsub/"* ]]; then
    debug "FAILED TO UNSUBSCRIBE"
    return
  fi
  rm -f "$TOPIC"
  unset SUBS["$TOPIC"]
}

function broadcast() {
  local TOPIC
  local line
  TOPIC="$1"
  if [[ -z "$TOPIC" ]]; then
    return
  fi
  if [[ ! -d "pubsub/${TOPIC}" ]]; then
    return
  fi
  TEE_ARGS=$(find pubsub/"${TOPIC}" -type p)
  if [[ -z "$TEE_ARGS" ]]; then
    return
  fi
  tee $TEE_ARGS > /dev/null
}

reply() {
  local CODE="$1"
  shift
  local RESPONSE
  printf -v "RESPONSE" ":%s %s %s %s\r\n" "$IRC_SERVER_HOST" "$CODE" "$NICK" "$@"
  RESPONSE="${RESPONSE:0:512}"
  printf "%s" "$RESPONSE"
  debug "REPLYING: $RESPONSE"
}

debug() {
  printf "%s\n" "$@" 1>&2
}

if [[ -z "$IRC_CONN_HANDLER" ]]; then

  query 'CREATE TABLE IF NOT EXISTS channels
    (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      name varchar(201)
    );'

  echo "i am the server" 1>&2
  echo -n "Starting server on port "

  export IRC_CONN_HANDLER=true
  export IRC_SERVER_CREATED="$(date)"
  tcpserver -1 -o -l 0 -H -R -c 1000 0 $PORT $0
else
  echo "connection opened with $TCPREMOTEIP" 1>&2
  while IFS= read -r line; do
    split "${line//$'\r'}" ' '
    if [[ "${arr[0]}" =~ :(.+) ]]; then
      PREFIX="${BASH_REMATCH[1]}"
      debug "PREFIX: '$PREFIX'"
      arr=("${arr[@]:1}")
    fi
    COMMAND="${arr[0]}"
    debug "COMMAND: '$COMMAND'"
    arr=("${arr[@]:1}")
    case "${COMMAND^^}" in
      NICK)
        NICK="${arr[0]}"
        ;;
      USER)
        USER="${arr[0]}"
        MODE="${arr[1]}"
        REALNAME="${arr[3]}"
        reply 001 ":Welcome, $NICK!$USER"
        reply 002 ":Your host is $IRC_SERVER_HOST, running version $VERSION"
        reply 003 ":This server was created $IRC_SERVER_CREATED"
        reply 004 "$IRC_SERVER_HOST bash-$VERSION"
        ;;
      PRIVMSG)
        TARGET="${arr[0]}"
        arr=("${arr[@]:1}")
        printf "%s\r\n" ":$NICK PRIVMSG $TARGET ${arr[@]}" | broadcast "$TARGET"
        debug "FORWARDING MESSAGE TO $TARGET"

        ;;
      JOIN)
        if [[ "${arr[@]}" == "0" ]]; then
          debug "YOU LEFT, IDK WHAT TO DO"
        else
          CHANNELS="${arr[0]}"
          KEYS="${arr[1]}"
          split "$CHANNELS" ','
          CHANNELS=("${arr[@]}")
          split "$KEYS" ','
          KEYS=("${arr[@]}")
          debug "CHANNELS: ${CHANNELS[@]}"
          debug "KEYS: ${KEYS[@]}"
          for CHANNEL in ${CHANNELS[@]}; do
            if [[ "$CHANNEL" != "#test" ]]; then
              continue
            fi
            subscribe "$CHANNEL"
            cat "$SUBSCRIPTION" &
            SUBS["$SUBSCRIPTION"]=true
            printf "%s\r\n" ":$NICK JOIN $CHANNEL" | broadcast "$CHANNEL"
          done
        fi
        ;;
      PING)
        reply PONG "${arr[0]}"
        ;;
      *)
        debug "UNRECOGNIZED COMMAND"
        debug "${arr[@]}"
        ;;
    esac
  done
  echo "connection closed with $TCPREMOTEIP" 1>&2
  for SUB in "${!SUBS[@]}"; do
    unsubscribe "$SUB"
  done
fi
